#!/usr/bin/env python

import sys
import clang.cindex


def main(argv):
    index = clang.cindex.Index.create()
    tu = index.parse(None, argv)  # a Translation Unit
    for c in tu.cursor.get_children():
        print_tags(c, tu.spelling)


def print_tags(cursor, filename, parents = []):
    from clang.cindex import CursorKind

    if not cursor.location.file or cursor.location.file.name != filename:
        return

    if cursor.is_definition():
        print tag(cursor, "::" + "::".join(parents + [cursor.spelling]))
        for i in range(len(parents) + 1):
            print tag(cursor, "::".join(parents[i:] + [cursor.spelling]))

    for c in cursor.get_children():
        if cursor.kind == CursorKind.NAMESPACE:
            p = parents + [cursor.spelling]
        else:
            p = parents
        print_tags(c, filename, p)


def tag(cursor, t):
    return "%s %d,%d" % (
        t,
        cursor.location.line, cursor.location.offset)


if __name__ == "__main__":
    sys.exit(main(sys.argv))
